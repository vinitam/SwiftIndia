//
//  NewsListingWorkerTests.swift
//  NewsCleanSwift
//
//  Created by Vinita Miranda on 22/04/18.
//  Copyright (c) 2018 Vinita Miranda. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import NewsCleanSwift
import XCTest

class NewsListingWorkerTests: XCTestCase {
  // MARK: Subject under test
  
  var sut: NewsListingWorker!
  
  // MARK: Test lifecycle
  
  override func setUp() {
    super.setUp()
    setupNewsListingWorker()
  }
  
  override func tearDown() {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupNewsListingWorker() {
    sut = NewsListingWorker(newsListingStore: NewsAPISpy())
  }
  
    class NewsAPISpy: NewsAPI {
        // MARK: Method call expectations
        var fetchNewsListingCalled = false
        var success = false
        
        // MARK: Spied methods
        
        override func fetchNewsListing(_ request: NewsListing.Fetch.Request, completionHandler: @escaping (_ articles: [Article]?, _ error: NSError?) -> Void) {
            fetchNewsListingCalled = true
            if(success) {
                completionHandler(Mock.News.articles, nil)
            }
            else{
                completionHandler(nil, NSError())
            }
        }
    }
    
    func testFetchNewsListingShouldReturnListOfArticles() {
        // Given
        let newsAPISpy = sut.newsListingStore as! NewsAPISpy
        
        // When
        sut.fetchNewsListing(NewsListing.Fetch.Request()) { (_ articles: [Article]?, _ error: NSError?) -> Void in

        }
        
        // Then
        XCTAssert(newsAPISpy.fetchNewsListingCalled, "Calling fetchNewsListing() should ask the data store for a list of articles")

    }
}
