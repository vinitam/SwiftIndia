//
//  NewsDetailsViewController.swift
//  NewsCleanSwift
//
//  Created by Vinita Miranda on 18/04/18.
//  Copyright (c) 2018 Vinita Miranda. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SVProgressHUD
import WebKit
protocol NewsDetailsDisplayLogic: class {
    func displayViewOnLoad(viewModel: NewsDetails.OnLoad.ViewModel)
}

class NewsDetailsViewController: UIViewController {
    var interactor: NewsDetailsBusinessLogic?
    var router: (NSObjectProtocol & NewsDetailsRoutingLogic & NewsDetailsDataPassing)?
    @IBOutlet weak var webView: WKWebView!
    

  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
  // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = NewsDetailsInteractor()
        let presenter = NewsDetailsPresenter()
        let router = NewsDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
  }
  
  // MARK: Routing
  
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
  // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.updateViewOnLoad(NewsDetails.OnLoad.Request())
        
        SVProgressHUD.setDefaultMaskType(.black)
        SVProgressHUD.setDefaultStyle(.custom)
        SVProgressHUD.setBackgroundColor(UIColor.white)
        SVProgressHUD.setForegroundColor(UIColor.primaryColor)
        SVProgressHUD.show(withStatus: "Loading...")
        webView.navigationDelegate = self
  }

}

extension NewsDetailsViewController: NewsDetailsDisplayLogic {
    func displayViewOnLoad(viewModel: NewsDetails.OnLoad.ViewModel) {
        webView.load(NSURLRequest(url: NSURL(string: viewModel.url)! as URL) as URLRequest)
    }
}

extension NewsDetailsViewController: WKNavigationDelegate {
    func webView(_ webView: WKWebView, didFail navigation: WKNavigation!, withError error: Error) {
        SVProgressHUD.dismiss()
    }
    
    func webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {
        SVProgressHUD.dismiss()
    }
}
