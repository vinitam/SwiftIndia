//
//  NewsListingInteractor.swift
//  NewsCleanSwift
//
//  Created by Vinita Miranda on 15/04/18.
//  Copyright (c) 2018 Vinita Miranda. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsListingBusinessLogic {
    func fetchNewsListing(request: NewsListing.Fetch.Request)
    func handleNewsSelection(request: NewsListing.Route.Request)
}

protocol NewsListingDataStore {
    var selectedArticle: Article? { get set }
    var articles: [Article] { get set }
}

class NewsListingInteractor: NewsListingBusinessLogic, NewsListingDataStore {
    var presenter: NewsListingPresentationLogic?
    var worker = NewsListingWorker(newsListingStore: NewsAPI())
    var selectedArticle: Article?
    var articles = [Article]()

    func fetchNewsListing(request: NewsListing.Fetch.Request) {
        worker.fetchNewsListing(request) { [weak self] (articles, error) in
            guard let strongSelf = self else { return }
            if let articles = articles {
                strongSelf.articles = articles
                strongSelf.presenter?.presentNewsListing(response: NewsListing.Fetch.Response(articles: articles))
            }
            else if let error = error {
                strongSelf.presenter?.presentError(error: error)
            }
        }
    }
    
    func handleNewsSelection(request: NewsListing.Route.Request) {
        selectedArticle = articles[request.index]
        presenter?.presentNewsDetails(response: NewsListing.Route.Response())
    }
}
